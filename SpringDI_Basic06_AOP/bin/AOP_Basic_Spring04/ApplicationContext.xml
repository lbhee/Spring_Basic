<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
	
<!-- 
	//1. 실객체의 주소
	Calc calc = new NewCalc();
	
	//2. 가짜를 생성
	Calc cal=(Calc)Proxy.newProxyInstance(calc.getClass().getClassLoader(),    //실객체의 메타 정보(내부)
               							  calc.getClass().getInterfaces() ,    //행위정보(인터페이스)
               							  new LogPrintHandler(calc));          //보조객체의 정보

    Spring
    1. org.springframework.aop.framework.ProxyFactoryBean 통해서 프록시 객체 생성
    2. logPrintAroundAdvice 객체(bean) 생성
    3. logPrintBeforeAdvice 객체(bean) 생성
    
    하나의 함수가 동작할 때 여러개의 보조업무(advice)가 수행가능하다. 
 -->
 	
	<bean  id="calc"  class="AOP_Basic_Spring04.NewCalc"></bean>
	<bean  id="logPrintAroundAdvice"  class="AOP_Basic_Spring04.LogPrintAroundAdvice"></bean>
	<bean  id="logPrintBeforeAdviece"  class="AOP_Basic_Spring04.LogPrintBeforeAdviece"></bean>
	<bean  id="proxy"  class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces"> <!-- 행위정보 -->
			<list>
				<value>AOP_Basic_Spring04.Calc</value>
			</list>	
		</property>
		<property name="target"   ref="calc" />
		<property name="interceptorNames">
			<list>
				<!--  <value>logPrintAroundAdvice</value>-->  <!-- Advice 가지는 보조업무 객체  -->
				<value>logPrintBeforeAdviece</value>
			</list>
		</property>
	</bean>
</beans> 